class Solution {

    public int solve(int[][] board, int i, int j) {
        int m = board.length;
        int n = board[0].length;
        int count = 0;

        int[][] directions = { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };

        for (int[] dir : directions) {
            int nrow = i + dir[0];
            int ncol = j + dir[1];

            if (nrow >= 0 && ncol >= 0 && nrow < m && ncol < n && Math.abs(board[nrow][ncol]) == 1) {
                count++;
            }
        }

        return count;
    }

    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = solve(board, i, j);

                if (board[i][j] == 1 && (count < 2 || count > 3)) {
                    board[i][j] = -1;
                } else if (board[i][j] == 0 && count == 3) {
                    board[i][j] = 2;
                }
            }
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] > 0) {
                    board[i][j] = 1;
                } else {
                    board[i][j] = 0;
                }
            }
        }
    }
}
