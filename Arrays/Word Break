class Solution {
    int dir[][] = { { 0, 1 }, { 0, -1 }, { 1, 0 }, { -1, 0 } };
    int n, m;

    public boolean solve(int row, int col, char board[][], String word, int index) {
        if (index == word.length()) {
            return true;
        }
        if (row >= n || col >= m || row < 0 || col < 0 || board[row][col] != word.charAt(index)) {
            return false;
        }
        char temp = board[row][col];
        board[row][col] = '#';

        for (int[] i : dir) {
            int nrow = row + i[0];
            int ncol = col + i[1];

            if (solve(nrow, ncol, board, word, index + 1)) {
                return true;
            }
        }

        board[row][col] = temp;

        return false;
    }

    public boolean exist(char[][] board, String word) {
        n = board.length;
        m = board[0].length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == word.charAt(0) && solve(i, j, board, word, 0)) {
                    return true;
                }
            }
        }
